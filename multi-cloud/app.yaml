apiVersion: v1                      
kind: Namespace
metadata:
  name: multi-cloud
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: hello
  namespace: multi-cloud
spec:
  componentKinds:
  - group: apps.open-cluster-management.io
    kind: Subscription
  descriptor: {}
  selector:
    matchExpressions:
      - key: app
        operator: In
        values: 
          - hello
---
apiVersion: apps.open-cluster-management.io/v1
kind: Channel
metadata:
  annotations:
    apps.open-cluster-management.io/reconcile-rate: high
  name: hello-channel
  namespace: multi-cloud
spec:
  type: Git
  pathname: 'https://gitlab.com/gitlab-com/partners/alliance/ibm-red-hat/sandbox/customer-k/multi-cloud-demo.git'
  secretRef:
    name: gitlab-access-token
---
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/git-path: deployment/dev
    apps.open-cluster-management.io/git-branch: main
    apps.open-cluster-management.io/reconcile-rate: "off"
    apps.open-cluster-management.io/reconcile-option: merge
  labels:
    app: hello
  name: hello-dev-subscription
  namespace: multi-cloud
spec:
  channel: multi-cloud/hello-channel
  placement:
    placementRef:
      kind: PlacementRule
      name: hello-dev-placement
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  labels:
    app: hello
  name: hello-dev-placement
  namespace: multi-cloud
spec:
  clusterSelector:
    matchLabels:
      'app-env-hello': 'development'
---
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/git-path: deployment/prod
    apps.open-cluster-management.io/git-branch: main
    apps.open-cluster-management.io/reconcile-rate: "off"
    apps.open-cluster-management.io/reconcile-option: merge
  labels:
    app: hello
  name: hello-prod-subscription
  namespace: multi-cloud
spec:
  channel: multi-cloud/hello-channel
  placement:
    placementRef:
      kind: PlacementRule
      name: hello-prod-placement
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  labels:
    app: hello
  name: hello-prod-placement
  namespace: multi-cloud
spec:
  clusterSelector:
    matchLabels:
      'app-env-hello': 'production'
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-namespace-multi-cloud
  namespace: multi-cloud
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-namespace-multi-cloud
      spec:
        remediationAction: enforce # will be overridden by remediationAction in parent policy
        severity: low
        namespaceSelector:
          exclude: ["kube-*"]
          include: ["default"]
        object-templates:
          - complianceType: musthave
            objectDefinition:
              kind: Namespace # must have namespace 'prod'
              apiVersion: v1
              metadata:
                name: multi-cloud
          - complianceType: musthave
            objectDefinition:
              kind: ConfigMap
              apiVersion: v1
              metadata:
                name: platform
                namespace: multi-cloud
                annotation:
                  argocd.argoproj.io/hook: Skip
              data:
                cluster:  '{{ fromClusterClaim "name" }}'
                platform: '{{ fromClusterClaim "platform.open-cluster-management.io" }}'
                product:  '{{ fromClusterClaim "product.open-cluster-management.io" }}'
                version:  '{{ fromClusterClaim "version.openshift.io" }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gitlab-auth-registry
  namespace: gitlab-auth
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-gitlab-auth-registry
      spec:
        remediationAction: enforce # will be overridden by remediationAction in parent policy
        severity: low
        object-templates:
          - complianceType: musthave
            objectDefinition:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: default
                namespace: multi-cloud
              imagePullSecrets:
                - name: gitlab-access-token
                - name: gitlab-registry-auth
                - name: gitlab-repo-auth
                - name: gitlab-registry-auth
          - complianceType: musthave
            objectDefinition:
              apiVersion: v1
              kind: Secret
              type: kubernetes.io/dockerconfigjson
              metadata:
                name: gitlab-registry-auth
                namespace: multi-cloud
                annotations:
                  apps.open-cluster-management.io/deployables: "secret"
              data:
                .dockerconfigjson: |
                  {{hub fromSecret "gitlab-auth" "gitlab-registry-auth" ".dockerconfigjson" hub}}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gitlab-auth-token
  namespace: gitlab-auth
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-gitlab-auth-token
      spec:
        remediationAction: enforce # will be overridden by remediationAction in parent policy
        severity: low
        object-templates:
          - complianceType: musthave
            objectDefinition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: gitlab-access-token
                namespace: multi-cloud
                annotations:
                  apps.open-cluster-management.io/deployables: "secret"
              data:
                user:        '{{hub fromSecret "gitlab-auth" "gitlab-access-token" "user" hub}}'
                accessToken: '{{hub fromSecret "gitlab-auth" "gitlab-access-token" "accessToken" hub}}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gitlab-auth-repo
  namespace: gitlab-auth
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-gitlab-auth-repo
      spec:
        remediationAction: enforce # will be overridden by remediationAction in parent policy
        severity: low
        object-templates:
          - complianceType: musthave
            objectDefinition:
              apiVersion: v1
              kind: Secret
              type: kubernetes.io/dockerconfigjson
              metadata:
                name: gitlab-repo-auth
                namespace: multi-cloud
                annotations:
                  apps.open-cluster-management.io/deployables: "secret"
              data:
                .dockerconfigjson: |
                  {{hub fromSecret "gitlab-auth" "gitlab-repo-auth" ".dockerconfigjson" hub}}
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-namespace-multi-cloud
  namespace: multi-cloud
placementRef:
  name: placement-policy-multi-cloud
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-namespace-multi-cloud
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-gitlab-auth-multi-cloud
  namespace: gitlab-auth
placementRef:
  name: policy-gitlab-auth-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-gitlab-auth-token
  kind: Policy
  apiGroup: policy.open-cluster-management.io
- name: policy-gitlab-auth-repo
  kind: Policy
  apiGroup: policy.open-cluster-management.io
- name: policy-gitlab-auth-registry
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-multi-cloud
  namespace: multi-cloud
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      []  # selects all clusters if not specified
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: policy-gitlab-auth-placement
  namespace: gitlab-auth
spec:
  clusterSelector:
    matchExpressions:
      - key: usage
        operator: In
        values:
          - gitlab
  clusterConditions:
    - status: "True"
      type: ManagedClusterConditionAvailable
